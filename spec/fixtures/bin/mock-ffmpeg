#!/usr/bin/env ruby
# frozen_string_literal: true

def iterations
  return @iterations if defined?(@iterations)

  @iterations ||= ARGV.find { |arg| arg =~ /-n/ }&.split('=')&.last&.to_i
end

def progress?
  return @progress if defined?(@progress)

  @progress ||= ARGV.include?('-progress')
end

warn <<~OUTPUT
  ffmpeg version 0.11.1 Copyright (c) 2000-2012 the FFmpeg developers
    built on Jun 27 2012 11:39:49 with llvm_gcc 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.15.00)
    configuration: --prefix=/usr/local/Cellar/ffmpeg/0.11.1 --enable-shared --enable-gpl --enable-version3 --enable-nonfree --enable-hardcoded-tables --enable-libfreetype --cc=/usr/bin/llvm-gcc --enable-libx264 --enable-libfaac --enable-libmp3lame --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libxvid --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libvo-aacenc --disable-ffplay
    libavutil      51. 54.100 / 51. 54.100
    libavcodec     54. 23.100 / 54. 23.100
    libavformat    54.  6.100 / 54.  6.100
    libavdevice    54.  0.100 / 54.  0.100
    libavfilter     2. 77.100 /  2. 77.100
    libswscale      2.  1.100 /  2.  1.100
    libswresample   0. 15.100 /  0. 15.100
    libpostproc    52.  0.100 / 52.  0.100
  Input #0, mov,mp4,m4a,3gp,3g2,mj2, from 'spec/fixtures/movies/widescreen_movie.mov':
    Metadata:
      major_brand     : isom
      minor_version   : 512
      compatible_brands: isomiso2avc1mp41
      creation_time   : 1970-01-01 00:00:00
      encoder         : Lavf52.61.0
    Duration: 00:00:07.33, start: 0.000000, bitrate: 321 kb/s
      Stream #0:0(und): Video: h264 (Constrained Baseline) (avc1 / 0x31637661), yuv420p, 320x180 [SAR 1:1 DAR 16:9], 291 kb/s, 10 fps, 10 tbr, 10 tbn, 20 tbc
      Metadata:
        creation_time   : 1970-01-01 00:00:00
        handler_name    : VideoHandler
      Stream #0:1(und): Audio: aac (mp4a / 0x6134706D), 22050 Hz, mono, s16, 31 kb/s
      Metadata:
        creation_time   : 1970-01-01 00:00:00
        handler_name    : SoundHandler
  Stream mapping:
    Stream #0:0 -> #0:0 (h264 -> libx264)
    Stream #0:1 -> #0:1 (aac -> libfaac)
  Press [q] to stop, [?] for help
OUTPUT

n = 0
loop do
  $stderr.write 'frame=0 fps=0.0 q=0.0 Lsize=0kB time=00:00:00.00 bitrate=0.0kbits/s' if progress?

  break if iterations && (n += 1) > iterations

  sleep 1
end
